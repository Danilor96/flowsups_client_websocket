generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                                                                 Int                             @id @default(autoincrement())
  email                                                              String                          @unique
  name                                                               String?
  password                                                           String?
  created_at                                                         DateTime                        @default(now())
  updated_at                                                         DateTime?
  emailVerified                                                      DateTime?
  sessions_expires                                                   DateTime?
  last_name                                                          String?
  img                                                                String?
  mobile_phone                                                       String?                         @unique
  status_id                                                          Int?
  username                                                           String?                         @unique
  ready_for_leads                                                    Boolean                         @default(false)
  round_robin                                                        Boolean                         @default(false)
  round_robin_order                                                  Int?
  Appointments_Appointments_created_byToUsers                        Appointments[]                  @relation("Appointments_created_byToUsers")
  appointments                                                       Appointments[]                  @relation("user")
  Awaiting_unknow_client                                             Awaiting_unknow_client[]
  recipient_messages                                                 Chat_messages[]                 @relation("recipient")
  sender_messages                                                    Chat_messages[]                 @relation("sender")
  Client_calls                                                       Client_calls[]
  Client_has_lead                                                    Client_has_lead[]
  Client_has_lead_Client_has_lead_created_by_idToUsers               Client_has_lead[]               @relation("Client_has_lead_created_by_idToUsers")
  Client_sms                                                         Client_sms[]
  Clients_Clients_bdc_idToUsers                                      Clients[]                       @relation("Clients_bdc_idToUsers")
  Clients_Clients_finance_manager_idToUsers                          Clients[]                       @relation("Clients_finance_manager_idToUsers")
  Clients_Clients_sales_manager_idToUsers                            Clients[]                       @relation("Clients_sales_manager_idToUsers")
  client_seller                                                      Clients[]                       @relation("seller")
  Clients_has_files                                                  Clients_has_files[]
  Daily_visit_history_Daily_visit_history_assigned_manager_idToUsers Daily_visit_history[]           @relation("Daily_visit_history_assigned_manager_idToUsers")
  Daily_visit_history_Daily_visit_history_sales_rep_idToUsers        Daily_visit_history[]           @relation("Daily_visit_history_sales_rep_idToUsers")
  Email_template                                                     Email_template[]
  Events                                                             Events[]
  Notes                                                              Notes[]
  Notifications                                                      Notifications[]
  Notifications_preferences                                          Notifications_preferences[]
  Roles                                                              Roles[]
  Sms_template                                                       Sms_template[]
  Sms_template_variables_tagged                                      Sms_template_variables_tagged[]
  Task_Notes                                                         Task_Notes[]
  assigned_task                                                      Tasks[]                         @relation("assigned")
  Tasks_Tasks_completed_byToUsers                                    Tasks[]                         @relation("Tasks_completed_byToUsers")
  sender_task                                                        Tasks[]                         @relation("creator")
  User_schedule                                                      User_schedule[]
  User_status                                                        User_status?                    @relation(fields: [status_id], references: [id], onDelete: Cascade)
  user_code                                                          Users_has_codes?
  user_has                                                           Users_has_roles?
  Vehicle_delivery_Vehicle_delivery_assigned_toToUsers               Vehicle_delivery[]              @relation("Vehicle_delivery_assigned_toToUsers")
  Vehicle_delivery_Vehicle_delivery_created_byToUsers                Vehicle_delivery[]              @relation("Vehicle_delivery_created_byToUsers")
}

model Users_has_codes {
  id      Int              @id @default(autoincrement())
  user_id Int              @unique
  code_id Int
  code    Activation_codes @relation(fields: [code_id], references: [id])
  user    Users            @relation(fields: [user_id], references: [id])
}

model Activation_codes {
  id                      Int               @id @default(autoincrement())
  code                    String            @unique
  activation_code_expired DateTime
  code_user               Users_has_codes[]
}

model Roles {
  id          Int                     @id @default(autoincrement())
  role        String
  status_id   Int
  created_by  Int?
  created_at  DateTime?               @default(now())
  Users       Users?                  @relation(fields: [created_by], references: [id], onDelete: Cascade)
  Role_status Role_status             @relation(fields: [status_id], references: [id], onDelete: Cascade)
  roles_has   Roles_has_permissions[]
  users_has   Users_has_roles[]
}

model Permissions {
  id             Int                     @id @default(autoincrement())
  permission     String
  permission_has Roles_has_permissions[]
}

model Roles_has_permissions {
  id            Int         @id @default(autoincrement())
  role_id       Int
  permission_id Int
  permission    Permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  role          Roles       @relation(fields: [role_id], references: [id], onDelete: Cascade)
}

model Users_has_roles {
  id      Int   @id @default(autoincrement())
  role_id Int
  user_id Int   @unique
  role    Roles @relation(fields: [role_id], references: [id], onDelete: Cascade)
  user    Users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Customers_age {
  id        Int         @id @default(autoincrement())
  gender    String
  customers Customers[]
}

model Customers_status {
  id        Int         @id @default(autoincrement())
  status    String
  customers Customers[]
}

model Customers_gender {
  id        Int         @id @default(autoincrement())
  gender    String
  customers Customers[]
}

model Customers {
  id               Int              @id @default(autoincrement())
  name             String
  last_name        String
  address          String
  phone_number     String
  email            String
  age_id           Int
  gender_id        Int
  status_id        Int
  customer_age     Customers_age    @relation(fields: [age_id], references: [id])
  customer_gender  Customers_gender @relation(fields: [gender_id], references: [id])
  customers_status Customers_status @relation(fields: [status_id], references: [id])
}

model Chat_messages_status {
  id     Int    @id @default(autoincrement())
  status String
}

model Chat_messages {
  id                Int      @id @default(autoincrement())
  messages          String
  sent_date         DateTime
  recipient_user_id Int
  sender_user_id    Int
  recipient         Users    @relation("recipient", fields: [recipient_user_id], references: [id])
  sender            Users    @relation("sender", fields: [sender_user_id], references: [id])
}

model Appointments_status {
  id           Int            @id @default(autoincrement())
  status       String
  appointments Appointments[] @relation("appointment_status")
}

model Appointments {
  id                                   Int                 @id @default(autoincrement())
  status_id                            Int
  customer_id                          Int
  user_id                              Int
  end_date                             DateTime
  start_date                           DateTime
  waiting_aprove                       Boolean?
  change_reason                        String?
  prevented_end_date                   DateTime?
  prevented_start_date                 DateTime?
  client_accept_appointment            Boolean             @default(false)
  created_at                           DateTime            @default(now())
  created_by                           Int
  Users_Appointments_created_byToUsers Users               @relation("Appointments_created_byToUsers", fields: [created_by], references: [id])
  customers                            Clients             @relation("customer", fields: [customer_id], references: [id], onDelete: Cascade)
  appointments_status                  Appointments_status @relation("appointment_status", fields: [status_id], references: [id])
  users                                Users               @relation("user", fields: [user_id], references: [id])
  Client_has_lead                      Client_has_lead[]
  Notifications                        Notifications?
  Tasks                                Tasks?
}

model Vehicle_colors {
  id                                                                         Int                       @id @default(autoincrement())
  color                                                                      String
  Client_vehicle_tradein_Client_vehicle_tradein_ext_color_idToVehicle_colors Client_vehicle_tradein[]  @relation("Client_vehicle_tradein_ext_color_idToVehicle_colors")
  Client_vehicle_tradein_Client_vehicle_tradein_int_color_idToVehicle_colors Client_vehicle_tradein[]  @relation("Client_vehicle_tradein_int_color_idToVehicle_colors")
  Client_vehicle_wishlist                                                    Client_vehicle_wishlist[]
  Vehicles_Vehicles_exterior_color_idToVehicle_colors                        Vehicles[]                @relation("Vehicles_exterior_color_idToVehicle_colors")
  Vehicles_Vehicles_interior_color_idToVehicle_colors                        Vehicles[]                @relation("Vehicles_interior_color_idToVehicle_colors")
}

model Vehicle_models {
  id                     Int                      @id @default(autoincrement())
  model                  String                   @unique
  Client_vehicle_tradein Client_vehicle_tradein[]
  vehicles               Vehicles[]               @relation("vehicle_model")
}

model Vehicle_manufacture_years {
  id                      Int                       @id @default(autoincrement())
  year                    String                    @unique
  Client_vehicle_tradein  Client_vehicle_tradein[]
  Client_vehicle_wishlist Client_vehicle_wishlist[]
  vehicles                Vehicles[]                @relation("vehicle_manufacture_year")
}

model Vehicle_identification_numbers {
  id                     Int                      @id @default(autoincrement())
  vin                    String                   @unique
  Client_vehicle_tradein Client_vehicle_tradein[]
  vehicles               Vehicles?                @relation("vehicle_identification_number")
}

model Vehicle_body_types {
  id                      Int                       @id @default(autoincrement())
  type                    String                    @unique
  Client_vehicle_wishlist Client_vehicle_wishlist[]
  vehicles                Vehicles[]                @relation("vehicle_body_type")
}

model Vehicle_transmissions {
  id           Int        @id @default(autoincrement())
  transmission String
  vehicles     Vehicles[] @relation("vehicle_transmission")
}

model Vehicle_prices {
  id                      Int                       @id @default(autoincrement())
  price                   String
  Client_vehicle_wishlist Client_vehicle_wishlist[]
  vehicles                Vehicles[]                @relation("vehicle_price")
}

model Vehicle_fuel_tank_types {
  id       Int        @id @default(autoincrement())
  type     String
  vehicles Vehicles[] @relation("vehicle_fuel_tank_type")
}

model Vehicle_conditions {
  id        Int        @id @default(autoincrement())
  condition String
  vehicles  Vehicles[] @relation("vehicle_condition")
}

model Vehicle_mileages {
  id                      Int                       @id @default(autoincrement())
  mileage                 String
  milleage_type_id        Int
  Client_vehicle_tradein  Client_vehicle_tradein[]
  Client_vehicle_wishlist Client_vehicle_wishlist[]
  Vehicle_milleage_type   Vehicle_milleage_type     @relation(fields: [milleage_type_id], references: [id], onDelete: Cascade)
  vehicles                Vehicles[]                @relation("vehicle_mileage")
}

model Vehicle_types {
  id                     Int                      @id @default(autoincrement())
  type                   String
  Client_vehicle_tradein Client_vehicle_tradein[]
  vehicles               Vehicles[]               @relation("vehicle_type")
}

model Vehicles {
  id                                                        Int                            @id @default(autoincrement())
  model_id                                                  Int
  manufacture_year_id                                       Int?
  identification_id                                         Int                            @unique
  transmission_id                                           Int
  price_id                                                  Int?
  fuel_tank_type_id                                         Int
  condition_id                                              Int
  mileage_id                                                Int?
  entry_stock                                               DateTime?
  vehicle_type_id                                           Int
  vehicle_status_id                                         Int
  vehicle_plate_id                                          Int?
  drive_train_id                                            Int
  engine_id                                                 Int
  exterior_color_id                                         Int
  interior_color_id                                         Int
  make_id                                                   Int
  odometer_make_id                                          Int
  trim_id                                                   Int?
  image_id                                                  Int?
  cylinder                                                  String
  doors                                                     String
  gvw                                                       String
  hwy                                                       String
  motor                                                     String
  mpg_city                                                  String
  weight                                                    String
  body_type_id                                              Int
  odometer                                                  String
  key_info_id                                               Int?
  title_license_id                                          Int?
  vehicle_purchase_info_id                                  Int?
  vehicle_general_info_id                                   Int?
  customer_status                                           String?
  Client_vehicle_wishlist                                   Client_vehicle_wishlist[]
  interested_vehicle                                        Clients[]                      @relation("interested_vehicle")
  Daily_visit_history                                       Daily_visit_history[]
  Deposits                                                  Deposits[]
  Vehicle_delivery                                          Vehicle_delivery[]
  vehicle_body_types                                        Vehicle_body_types             @relation("vehicle_body_type", fields: [body_type_id], references: [id], onDelete: Cascade)
  vehicle_conditions                                        Vehicle_conditions             @relation("vehicle_condition", fields: [condition_id], references: [id])
  Vehicle_drive_train                                       Vehicle_drive_train            @relation(fields: [drive_train_id], references: [id], onDelete: Cascade)
  Vehicle_engine                                            Vehicle_engine                 @relation(fields: [engine_id], references: [id], onDelete: Cascade)
  Vehicle_colors_Vehicles_exterior_color_idToVehicle_colors Vehicle_colors                 @relation("Vehicles_exterior_color_idToVehicle_colors", fields: [exterior_color_id], references: [id])
  vehicle_fuel_tank_types                                   Vehicle_fuel_tank_types        @relation("vehicle_fuel_tank_type", fields: [fuel_tank_type_id], references: [id])
  vehicle_identification_numbers                            Vehicle_identification_numbers @relation("vehicle_identification_number", fields: [identification_id], references: [id], onDelete: Cascade)
  Vehicle_image                                             Vehicle_image?                 @relation(fields: [image_id], references: [id], onDelete: Cascade)
  Vehicle_colors_Vehicles_interior_color_idToVehicle_colors Vehicle_colors                 @relation("Vehicles_interior_color_idToVehicle_colors", fields: [interior_color_id], references: [id])
  Vehicle_details_key_info                                  Vehicle_details_key_info?      @relation(fields: [key_info_id], references: [id], onDelete: Cascade)
  Vehicle_make                                              Vehicle_make                   @relation(fields: [make_id], references: [id])
  vehicle_manufacture_years                                 Vehicle_manufacture_years?     @relation("vehicle_manufacture_year", fields: [manufacture_year_id], references: [id])
  vehicle_mileages                                          Vehicle_mileages?              @relation("vehicle_mileage", fields: [mileage_id], references: [id])
  vehicle_models                                            Vehicle_models                 @relation("vehicle_model", fields: [model_id], references: [id])
  vehicle_prices                                            Vehicle_prices?                @relation("vehicle_price", fields: [price_id], references: [id])
  Vehicle_details_title_license                             Vehicle_details_title_license? @relation(fields: [title_license_id], references: [id], onDelete: Cascade)
  vehicle_transmissions                                     Vehicle_transmissions          @relation("vehicle_transmission", fields: [transmission_id], references: [id])
  Vehicle_trim                                              Vehicle_trim?                  @relation(fields: [trim_id], references: [id], onDelete: Cascade)
  General_info                                              General_info?                  @relation(fields: [vehicle_general_info_id], references: [id], onDelete: Cascade)
  Vehicle_license_plates                                    Vehicle_license_plates?        @relation(fields: [vehicle_plate_id], references: [id], onDelete: Cascade)
  Vehicle_details_purchase_info                             Vehicle_details_purchase_info? @relation(fields: [vehicle_purchase_info_id], references: [id], onDelete: Cascade)
  Vehicle_status                                            Vehicle_status                 @relation(fields: [vehicle_status_id], references: [id])
  vehicle_type                                              Vehicle_types                  @relation("vehicle_type", fields: [vehicle_type_id], references: [id])
}

model Tasks {
  id                              Int           @id @default(autoincrement())
  title                           String
  description                     String
  assigned_to                     Int?
  created_by                      Int
  created_at                      DateTime      @default(now())
  status                          Int
  finished_at                     DateTime?
  updated_at                      DateTime?
  manager_task                    Boolean?
  customer_id                     Int?
  deadline                        DateTime
  completed_by                    Int?
  assigned_to_all_managers        Boolean?
  appointment_id                  Int?          @unique
  Task_Notes                      Task_Notes[]
  Appointments                    Appointments? @relation(fields: [appointment_id], references: [id], onDelete: Cascade)
  assigned                        Users?        @relation("assigned", fields: [assigned_to], references: [id], onDelete: Cascade)
  Users_Tasks_completed_byToUsers Users?        @relation("Tasks_completed_byToUsers", fields: [completed_by], references: [id], onDelete: Cascade)
  creator                         Users         @relation("creator", fields: [created_by], references: [id], onDelete: Cascade)
  Clients                         Clients?      @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  task_status                     Task_status   @relation("task_status", fields: [status], references: [id], onDelete: Cascade)
}

model Task_status {
  id     Int     @id @default(autoincrement())
  status String
  tasks  Tasks[] @relation("task_status")
}

model Lead_types {
  id                  Int                   @id @default(autoincrement())
  type                String
  client_lead_type    Clients[]             @relation("lead_type")
  Daily_visit_history Daily_visit_history[]
}

model Lead_sources {
  id                 Int       @id @default(autoincrement())
  source             String
  client_lead_source Clients[] @relation("lead_source")
}

model Contact_methods {
  id                    Int       @id @default(autoincrement())
  method                String
  client_contact_method Clients[] @relation("contact_method")
}

model Languages {
  id       Int       @id @default(autoincrement())
  language String
  Clients  Clients[]
}

model Files {
  id           Int                 @id @default(autoincrement())
  file         String
  stipulation  String
  uploaded_by  Int
  uploaded_on  DateTime
  path         String
  content_type String
  client_file  Clients_has_files[] @relation("file")
}

model Clients_has_files {
  id               Int     @id @default(autoincrement())
  file_id          Int
  client_id        Int
  uploader_user_id Int
  client           Clients @relation("client", fields: [client_id], references: [id], onDelete: Cascade)
  file             Files   @relation("file", fields: [file_id], references: [id], onDelete: Cascade)
  Users            Users   @relation(fields: [uploader_user_id], references: [id], onDelete: Cascade)
}

model Inquiry_types {
  id             Int       @id @default(autoincrement())
  type           String
  client_inquiry Clients[] @relation("inquiry_type")
}

model Genders {
  id            Int          @id @default(autoincrement())
  gender        String
  client_gender Clients[]    @relation("gender")
  Credit_app    Credit_app[]
}

model Client_types {
  id          Int       @id @default(autoincrement())
  type        String
  client_type Clients[] @relation("client_type")
}

model Notes {
  id               Int               @id @default(autoincrement())
  note             String
  created_at       DateTime
  created_by_id    Int
  from_id          Int?
  client_id        Int
  Client_has_lead  Client_has_lead[]
  Deposits         Deposits[]
  Clients          Clients           @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Users            Users             @relation(fields: [created_by_id], references: [id], onDelete: Cascade)
  Client_note_from Client_note_from? @relation(fields: [from_id], references: [id], onDelete: Cascade)
}

model Ad_id {
  id    Int       @id @default(autoincrement())
  ad    String
  ad_id Clients[] @relation("ad_id")
}

model Client_has_cobuyer {
  id                                                    Int                         @id @default(autoincrement())
  relationship_id                                       Int
  buyer_client_id                                       Int                         @unique
  cobuyer_client_id                                     Int
  Clients_Client_has_cobuyer_buyer_client_idToClients   Clients                     @relation("Client_has_cobuyer_buyer_client_idToClients", fields: [buyer_client_id], references: [id], onDelete: Cascade)
  Clients_Client_has_cobuyer_cobuyer_client_idToClients Clients                     @relation("Client_has_cobuyer_cobuyer_client_idToClients", fields: [cobuyer_client_id], references: [id], onDelete: Cascade)
  Cobuyer_client_relationship                           Cobuyer_client_relationship @relation(fields: [relationship_id], references: [id])
}

model Client_status {
  id                  Int                   @id @default(autoincrement())
  status              String
  client_status       Clients[]             @relation("client_status")
  Customer_settings   Customer_settings[]
  Daily_visit_history Daily_visit_history[]
}

model Clients {
  id                                                                    Int                       @id @default(autoincrement())
  current_address                                                       String
  previous_address                                                      String?
  mailing_address                                                       String?
  current_job                                                           String?
  previous_job                                                          String?
  other_income                                                          String?
  reference                                                             String?
  cash_down                                                             String?
  duplicate                                                             String?
  contact_method_id                                                     Int?
  lead_source_id                                                        Int
  lead_type_id                                                          Int
  inquiry_type_id                                                       Int?
  born_date                                                             DateTime?
  created_at                                                            DateTime                  @default(now())
  email                                                                 String                    @unique
  gender_id                                                             Int?
  home_phone                                                            String
  mobile_phone                                                          String                    @unique
  seller_id                                                             Int?
  social_security                                                       String
  work_phone                                                            String
  name_lastname                                                         String?
  client_type_id                                                        Int?
  intereseted_vehicle_id                                                Int?
  ad_id                                                                 Int?
  client_status_id                                                      Int?
  cobuyer                                                               Boolean?
  client_messages_id                                                    Int?
  first_name                                                            String
  last_name                                                             String
  middle_initials                                                       String?
  nickname                                                              String?
  salutation                                                            String?
  suffix                                                                String?
  client_address_id                                                     Int
  client_language_id                                                    Int?
  deleted                                                               Boolean?                  @default(false)
  lead_temperature_id                                                   Int?
  referrer_id                                                           Int?
  contact_time_id                                                       Int?
  last_activity                                                         DateTime?
  credit_app_list_status_id                                             Int?
  consent_sent                                                          Boolean?                  @default(false)
  born_date_hash                                                        String?
  consent_approved                                                      Boolean?                  @default(false)
  country_phone_code_id                                                 Int?
  lost_date                                                             DateTime?
  bdc_id                                                                Int?
  finance_manager_id                                                    Int?
  sales_manager_id                                                      Int?
  appointment                                                           Appointments[]            @relation("customer")
  Client_calls                                                          Client_calls[]
  Client_has_cobuyer_Client_has_cobuyer_buyer_client_idToClients        Client_has_cobuyer?       @relation("Client_has_cobuyer_buyer_client_idToClients")
  Client_has_cobuyer_Client_has_cobuyer_cobuyer_client_idToClients      Client_has_cobuyer[]      @relation("Client_has_cobuyer_cobuyer_client_idToClients")
  Client_has_lead                                                       Client_has_lead[]
  Client_sms                                                            Client_sms[]
  Client_vehicle_tradein                                                Client_vehicle_tradein[]
  Client_vehicle_wishlist                                               Client_vehicle_wishlist[]
  ad                                                                    Ad_id?                    @relation("ad_id", fields: [ad_id], references: [id])
  Users_Clients_bdc_idToUsers                                           Users?                    @relation("Clients_bdc_idToUsers", fields: [bdc_id], references: [id])
  Client_address                                                        Client_address            @relation(fields: [client_address_id], references: [id])
  Languages                                                             Languages?                @relation(fields: [client_language_id], references: [id])
  client_status                                                         Client_status?            @relation("client_status", fields: [client_status_id], references: [id])
  client_type                                                           Client_types?             @relation("client_type", fields: [client_type_id], references: [id])
  contact_method                                                        Contact_methods?          @relation("contact_method", fields: [contact_method_id], references: [id])
  Contact_time                                                          Contact_time?             @relation(fields: [contact_time_id], references: [id], onDelete: Cascade)
  Country_phone_code                                                    Country_phone_code?       @relation(fields: [country_phone_code_id], references: [id], onDelete: Cascade)
  Credit_app_list_status                                                Credit_app_list_status?   @relation(fields: [credit_app_list_status_id], references: [id], onDelete: Cascade)
  Users_Clients_finance_manager_idToUsers                               Users?                    @relation("Clients_finance_manager_idToUsers", fields: [finance_manager_id], references: [id])
  gender                                                                Genders?                  @relation("gender", fields: [gender_id], references: [id])
  inquiry_type                                                          Inquiry_types?            @relation("inquiry_type", fields: [inquiry_type_id], references: [id])
  interested_vehicle                                                    Vehicles?                 @relation("interested_vehicle", fields: [intereseted_vehicle_id], references: [id])
  lead_source                                                           Lead_sources              @relation("lead_source", fields: [lead_source_id], references: [id])
  Lead_temperature                                                      Lead_temperature?         @relation(fields: [lead_temperature_id], references: [id])
  lead_type                                                             Lead_types                @relation("lead_type", fields: [lead_type_id], references: [id])
  Users_Clients_sales_manager_idToUsers                                 Users?                    @relation("Clients_sales_manager_idToUsers", fields: [sales_manager_id], references: [id])
  seller                                                                Users?                    @relation("seller", fields: [seller_id], references: [id])
  file                                                                  Clients_has_files[]       @relation("client")
  Clients_has_referrer_Clients_has_referrer_client_buyer_idToClients    Clients_has_referrer?     @relation("Clients_has_referrer_client_buyer_idToClients")
  Clients_has_referrer_Clients_has_referrer_client_referrer_idToClients Clients_has_referrer[]    @relation("Clients_has_referrer_client_referrer_idToClients")
  Consent_code                                                          Consent_code?
  Credit_app                                                            Credit_app?
  Credit_app_address                                                    Credit_app_address[]
  Credit_app_other_income                                               Credit_app_other_income[]
  Credit_app_reference                                                  Credit_app_reference[]
  Customer_employment                                                   Customer_employment[]
  Daily_visit_history                                                   Daily_visit_history[]
  Deal                                                                  Deal[]
  Deposits                                                              Deposits[]
  Events                                                                Events[]
  Notes                                                                 Notes[]
  Notifications                                                         Notifications[]
  Tasks                                                                 Tasks[]
  Vehicle_delivery                                                      Vehicle_delivery[]
}

model Client_detail_leads {
  id              Int               @id @default(autoincrement())
  lead            String
  Client_has_lead Client_has_lead[]
}

model Client_has_lead {
  id                                         Int                  @id @default(autoincrement())
  lead_id                                    Int?
  follow_up_date                             DateTime?
  assigned_to_id                             Int
  note_id                                    Int?
  reminder_time                              DateTime?
  appointment_id                             Int?
  incoming                                   Boolean?
  outcoming                                  Boolean?
  dealdate                                   DateTime?
  client_id                                  Int
  lost_reason_id                             Int?
  created_by_id                              Int
  created_at                                 DateTime
  status_id                                  Int
  Appointments                               Appointments?        @relation(fields: [appointment_id], references: [id])
  Users                                      Users                @relation(fields: [assigned_to_id], references: [id])
  Clients                                    Clients              @relation(fields: [client_id], references: [id])
  Users_Client_has_lead_created_by_idToUsers Users                @relation("Client_has_lead_created_by_idToUsers", fields: [created_by_id], references: [id])
  Client_detail_leads                        Client_detail_leads? @relation(fields: [lead_id], references: [id])
  Lost_reason                                Lost_reason?         @relation(fields: [lost_reason_id], references: [id])
  Notes                                      Notes?               @relation(fields: [note_id], references: [id])
  Lead_status                                Lead_status          @relation(fields: [status_id], references: [id], onDelete: Cascade)
}

model Client_sms {
  id           Int        @id @default(autoincrement())
  message      String
  date_sent    DateTime
  sent_by_user Boolean
  client_id    Int
  sent_by      Int?
  status_id    Int
  Clients      Clients    @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Users        Users?     @relation(fields: [sent_by], references: [id], onDelete: Cascade)
  Sms_status   Sms_status @relation(fields: [status_id], references: [id], onDelete: Cascade)
}

model Cobuyer_client_relationship {
  id                 Int                  @id @default(autoincrement())
  relationship       String
  Client_has_cobuyer Client_has_cobuyer[]
}

model Lost_reason {
  id              Int               @id @default(autoincrement())
  reason          String
  Client_has_lead Client_has_lead[]
}

model Client_address {
  id        Int       @id @default(autoincrement())
  city      String
  street    String
  state_id  Int
  county_id Int?
  zip       String?
  County    County?   @relation(fields: [county_id], references: [id])
  States    States    @relation(fields: [state_id], references: [id])
  Clients   Clients[]
}

model County {
  id             Int              @id @default(autoincrement())
  county         String
  Client_address Client_address[]
}

model States {
  id             Int              @id @default(autoincrement())
  state          String
  Client_address Client_address[]
}

model Vehicle_status {
  id       Int        @id @default(autoincrement())
  status   String
  Vehicles Vehicles[]
}

model Client_calls {
  id                 Int            @id @default(autoincrement())
  client_id          Int?
  seller_id          Int?
  call_date          DateTime
  call_status_id     Int
  call_direction_id  Int
  call_duration      String
  call_sid           String         @unique
  unknow_call_number String?
  phone_number       String?
  Call_direction     Call_direction @relation(fields: [call_direction_id], references: [id], onDelete: Cascade)
  Call_statuses      Call_statuses  @relation(fields: [call_status_id], references: [id])
  Clients            Clients?       @relation(fields: [client_id], references: [id])
  Users              Users?         @relation(fields: [seller_id], references: [id])
}

model Business {
  id                   Int     @id @default(autoincrement())
  name                 String
  image                String
  county               String
  county_code          String
  ein_number           String
  email                String
  fax_number           String
  mailling_address     String
  sales_tax_license    String
  store_alias          String?
  store_id             String
  store_license_number String
}

model Call_statuses {
  id           Int            @id @default(autoincrement())
  status       String
  Client_calls Client_calls[]
}

model Client_id_state {
  id                                                                                            Int                             @id @default(autoincrement())
  id_state                                                                                      String
  Credit_app                                                                                    Credit_app[]
  Vehicle_details_title_license_Vehicle_details_title_license_license_state_idToClient_id_state Vehicle_details_title_license[] @relation("Vehicle_details_title_license_license_state_idToClient_id_state")
  Vehicle_details_title_license_Vehicle_details_title_license_title_state_idToClient_id_state   Vehicle_details_title_license[] @relation("Vehicle_details_title_license_title_state_idToClient_id_state")
}

model Client_id_type {
  id         Int          @id @default(autoincrement())
  id_type    String
  Credit_app Credit_app[]
}

model Client_note_from {
  id    Int     @id @default(autoincrement())
  from  String
  Notes Notes[]
}

model Client_vehicle_tradein {
  id                                                                 Int                            @id @default(autoincrement())
  vin_id                                                             Int
  year_id                                                            Int
  make_id                                                            Int
  model_id                                                           Int
  trim_id                                                            Int
  mileage_id                                                         Int
  int_color_id                                                       Int
  ext_color_id                                                       Int
  book_value                                                         String?
  trade_allowance                                                    String?
  trade_payoff                                                       String?
  comment_id                                                         Int?
  client_id                                                          Int
  vehicle_type_id                                                    Int
  Clients                                                            Clients                        @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Vehicle_tradein_comments                                           Vehicle_tradein_comments?      @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  Vehicle_colors_Client_vehicle_tradein_ext_color_idToVehicle_colors Vehicle_colors                 @relation("Client_vehicle_tradein_ext_color_idToVehicle_colors", fields: [ext_color_id], references: [id], onDelete: Cascade)
  Vehicle_colors_Client_vehicle_tradein_int_color_idToVehicle_colors Vehicle_colors                 @relation("Client_vehicle_tradein_int_color_idToVehicle_colors", fields: [int_color_id], references: [id], onDelete: Cascade)
  Vehicle_brands                                                     Vehicle_make                   @relation(fields: [make_id], references: [id], onDelete: Cascade)
  Vehicle_mileages                                                   Vehicle_mileages               @relation(fields: [mileage_id], references: [id], onDelete: Cascade)
  Vehicle_models                                                     Vehicle_models                 @relation(fields: [model_id], references: [id], onDelete: Cascade)
  Vehicle_trims                                                      Vehicle_trims                  @relation(fields: [trim_id], references: [id], onDelete: Cascade)
  Vehicle_types                                                      Vehicle_types                  @relation(fields: [vehicle_type_id], references: [id], onDelete: Cascade)
  Vehicle_identification_numbers                                     Vehicle_identification_numbers @relation(fields: [vin_id], references: [id], onDelete: Cascade)
  Vehicle_manufacture_years                                          Vehicle_manufacture_years      @relation(fields: [year_id], references: [id], onDelete: Cascade)
}

model Client_vehicle_wishlist {
  id                        Int                       @id @default(autoincrement())
  vehicle_id                Int
  max_mileage_id            Int
  max_price_id              Int
  min_year_id               Int
  exterior_color_id         Int
  body_type_id              Int
  client_id_id              Int
  Vehicle_body_types        Vehicle_body_types        @relation(fields: [body_type_id], references: [id], onDelete: Cascade)
  Clients                   Clients                   @relation(fields: [client_id_id], references: [id], onDelete: Cascade)
  Vehicle_colors            Vehicle_colors            @relation(fields: [exterior_color_id], references: [id], onDelete: Cascade)
  Vehicle_mileages          Vehicle_mileages          @relation(fields: [max_mileage_id], references: [id], onDelete: Cascade)
  Vehicle_prices            Vehicle_prices            @relation(fields: [max_price_id], references: [id], onDelete: Cascade)
  Vehicle_manufacture_years Vehicle_manufacture_years @relation(fields: [min_year_id], references: [id], onDelete: Cascade)
  Vehicles                  Vehicles                  @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
}

model Clients_has_referrer {
  id                                                       Int     @id @default(autoincrement())
  client_buyer_id                                          Int     @unique
  client_referrer_id                                       Int
  Clients_Clients_has_referrer_client_buyer_idToClients    Clients @relation("Clients_has_referrer_client_buyer_idToClients", fields: [client_buyer_id], references: [id])
  Clients_Clients_has_referrer_client_referrer_idToClients Clients @relation("Clients_has_referrer_client_referrer_idToClients", fields: [client_referrer_id], references: [id])
}

model Consent_code {
  id           Int      @id @default(autoincrement())
  customer_id  Int      @unique
  token        String   @unique
  code_expired DateTime
  Clients      Clients  @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

model Contact_time {
  id      Int       @id @default(autoincrement())
  time    String
  Clients Clients[]
}

model Country_phone_code {
  id      Int       @id @default(autoincrement())
  country String
  code    String
  Clients Clients[]
}

model Credit_app {
  id                 Int              @id @default(autoincrement())
  ssn                String?
  date_of_birth      DateTime?
  id_type_id         Int?
  id_state_id        Int?
  id_number          String?
  id_issue_date      DateTime?
  id_expiration_date DateTime?
  cash_down          String?
  send_automated_sms Boolean?
  client_id          Int              @unique
  gender_id          Int?
  created_at         DateTime         @default(now())
  Clients            Clients          @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Genders            Genders?         @relation(fields: [gender_id], references: [id], onDelete: Cascade)
  Client_id_state    Client_id_state? @relation(fields: [id_state_id], references: [id], onDelete: Cascade)
  Client_id_type     Client_id_type?  @relation(fields: [id_type_id], references: [id], onDelete: Cascade)
}

model Credit_app_address {
  id                                                                                          Int                        @id @default(autoincrement())
  current_address                                                                             String?
  mailing_address                                                                             String?
  client_id                                                                                   Int
  current_address_type_id                                                                     Int?
  current_month_id                                                                            Int?
  current_rent_mort                                                                           String?
  current_year                                                                                String?
  current_city                                                                                String?
  current_county                                                                              String?
  current_state                                                                               String?
  current_state_id                                                                            String?
  current_street                                                                              String?
  current_zip                                                                                 String?
  mailing_city                                                                                String?
  mailing_county                                                                              String?
  mailing_state                                                                               String?
  mailing_state_id                                                                            String?
  mailing_street                                                                              String?
  mailing_zip                                                                                 String?
  Clients                                                                                     Clients                    @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Credit_app_address_type_Credit_app_address_current_address_type_idToCredit_app_address_type Credit_app_address_type?   @relation("Credit_app_address_current_address_type_idToCredit_app_address_type", fields: [current_address_type_id], references: [id], onDelete: Cascade)
  Credit_app_address_months_Credit_app_address_current_month_idToCredit_app_address_months    Credit_app_address_months? @relation("Credit_app_address_current_month_idToCredit_app_address_months", fields: [current_month_id], references: [id], onDelete: Cascade)
  Credit_app_address_prev                                                                     Credit_app_address_prev[]
}

model Credit_app_address_months {
  id                                                                                Int                       @id @default(autoincrement())
  month                                                                             String
  Credit_app_address_Credit_app_address_current_month_idToCredit_app_address_months Credit_app_address[]      @relation("Credit_app_address_current_month_idToCredit_app_address_months")
  Credit_app_address_prev                                                           Credit_app_address_prev[]
  Customer_employment                                                               Customer_employment[]
}

model Credit_app_address_type {
  id                                                                                     Int                       @id @default(autoincrement())
  type                                                                                   String
  Credit_app_address_Credit_app_address_current_address_type_idToCredit_app_address_type Credit_app_address[]      @relation("Credit_app_address_current_address_type_idToCredit_app_address_type")
  Credit_app_address_prev                                                                Credit_app_address_prev[]
}

model Credit_app_list_status {
  id      Int       @id @default(autoincrement())
  status  String
  Clients Clients[]
}

model Customer_employment {
  id                          Int                           @id @default(autoincrement())
  client_id                   Int
  employment_status_id        Int
  current_employer_name       String?
  previous_employer_name      String?
  occupation_id               Int
  year                        String
  month_id                    Int
  income_type_id              Int
  montly_income               String
  Clients                     Clients                       @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Employment_statuses         Employment_statuses           @relation(fields: [employment_status_id], references: [id], onDelete: Cascade)
  Customer_income_type        Customer_income_type          @relation(fields: [income_type_id], references: [id], onDelete: Cascade)
  Credit_app_address_months   Credit_app_address_months     @relation(fields: [month_id], references: [id], onDelete: Cascade)
  Customer_occupation         Customer_occupation           @relation(fields: [occupation_id], references: [id], onDelete: Cascade)
  Customer_employment_address Customer_employment_address[]
}

model Customer_employment_address {
  id                     Int                 @id @default(autoincrement())
  current_address        String?
  current_phone_number   String?
  previous_phone_number  String?
  previous_address       String?
  customer_employment_id Int
  Customer_employment    Customer_employment @relation(fields: [customer_employment_id], references: [id], onDelete: Cascade)
}

model Customer_income_type {
  id                  Int                   @id @default(autoincrement())
  income              String
  Customer_employment Customer_employment[]
}

model Customer_occupation {
  id                  Int                   @id @default(autoincrement())
  occupation          String
  Customer_employment Customer_employment[]
}

model Day_times {
  id                                                       Int             @id @default(autoincrement())
  time                                                     String
  User_schedule_User_schedule_from_day_times_idToDay_times User_schedule[] @relation("User_schedule_from_day_times_idToDay_times")
  User_schedule_User_schedule_to_day_times_idToDay_times   User_schedule[] @relation("User_schedule_to_day_times_idToDay_times")
}

model Deposit_methods {
  id       Int        @id @default(autoincrement())
  method   String
  Deposits Deposits[]
}

model Deposits {
  id                Int             @id @default(autoincrement())
  client_id         Int
  vehicle_id        Int
  amount            String
  processing_fee    String?
  total             String
  method_id         Int
  reference         String
  deposit_date      DateTime
  good_through_date DateTime
  non_refundable    Boolean?
  note_id           Int?
  Clients           Clients         @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Deposit_methods   Deposit_methods @relation(fields: [method_id], references: [id], onDelete: Cascade)
  Notes             Notes?          @relation(fields: [note_id], references: [id], onDelete: Cascade)
  Vehicles          Vehicles        @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
}

model Employment_statuses {
  id                  Int                   @id @default(autoincrement())
  status              String
  Customer_employment Customer_employment[]
}

model Events {
  id          Int      @id @default(autoincrement())
  description String
  updated_at  DateTime
  updated_by  Int
  client_id   Int
  Clients     Clients  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  Users       Users    @relation(fields: [updated_by], references: [id], onDelete: Cascade)
}

model Incidents {
  id       Int     @id @default(autoincrement())
  incident String
  section  String?
}

model Lead_status {
  id              Int               @id @default(autoincrement())
  status          String
  Client_has_lead Client_has_lead[]
}

model Lead_temperature {
  id          Int       @id @default(autoincrement())
  temperature String
  Clients     Clients[]
}

model Notifications {
  id                        Int               @id @default(autoincrement())
  user_id                   Int?
  customer_id               Int?
  message                   String
  type_id                   Int
  created_at                DateTime          @default(now())
  is_read                   Boolean           @default(false)
  is_deleted                Boolean           @default(false)
  notification_for_managers Boolean?
  appointment_id            Int?              @unique
  Appointments              Appointments?     @relation(fields: [appointment_id], references: [id], onDelete: Cascade)
  Clients                   Clients?          @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  Type_notification         Type_notification @relation(fields: [type_id], references: [id], onDelete: Cascade)
  Users                     Users?            @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Notifications_preferences {
  id                  Int                 @id @default(autoincrement())
  notification        String
  type_id             Int
  active              Boolean
  user_id             Int
  Notifications_types Notifications_types @relation(fields: [type_id], references: [id], onDelete: Cascade)
  Users               Users               @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Notifications_types {
  id                        Int                         @id @default(autoincrement())
  type                      String
  Notifications_preferences Notifications_preferences[]
}

model Role_status {
  id     Int     @id @default(autoincrement())
  status String
  Roles  Roles[]
}

model Sms_status {
  id         Int          @id @default(autoincrement())
  status     String
  Client_sms Client_sms[]
}

model Sms_template {
  id                Int                   @id @default(autoincrement())
  name              String
  template          String
  category_id       Int
  created_by        Int
  creted_date       DateTime
  published         Boolean               @default(false)
  Template_category Sms_template_category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  Users             Users                 @relation(fields: [created_by], references: [id], onDelete: Cascade)
}

model Type_notification {
  id            Int             @id @default(autoincrement())
  type          String
  Notifications Notifications[]
}

model User_status {
  id     Int     @id @default(autoincrement())
  status String
  Users  Users[]
}

model Vehicle_license_plates {
  id       Int        @id @default(autoincrement())
  plate    String
  Vehicles Vehicles[]
}

model Vehicle_tradein_comments {
  id                     Int                      @id @default(autoincrement())
  comment                String
  Client_vehicle_tradein Client_vehicle_tradein[]
}

model Vehicle_trims {
  id                     Int                      @id @default(autoincrement())
  trim                   String
  Client_vehicle_tradein Client_vehicle_tradein[]
}

model Automated_review {
  id                                  Int     @id @default(autoincrement())
  invitation                          String
  enable_automated_review_invitations Boolean @default(false)
}

model Custom_be_back_reasons {
  id     Int    @id @default(autoincrement())
  reason String
}

model Custom_lost_reasons {
  id     Int    @id @default(autoincrement())
  reason String
}

model Custom_no_sale_reasons {
  id     Int    @id @default(autoincrement())
  reason String
}

model Customer_settings {
  id                                 Int                      @id @default(autoincrement())
  ignore_first_name                  Boolean                  @default(false)
  active_lost_customer               Boolean                  @default(false)
  show_followup                      Boolean                  @default(false)
  complete_all_open_tasks            Boolean                  @default(false)
  lead_lost_after                    Int
  set_active_lost_customer_status_to Int
  followup_task_visibility           Int
  Followup_task_visibility           Followup_task_visibility @relation(fields: [followup_task_visibility], references: [id], onDelete: Cascade)
  Client_status                      Client_status            @relation(fields: [set_active_lost_customer_status_to], references: [id], onDelete: Cascade)
}

model Detail_acq_mill_type {
  id                            Int                             @id @default(autoincrement())
  type                          String
  Vehicle_details_purchase_info Vehicle_details_purchase_info[]
}

model Detail_condition {
  id           Int            @id @default(autoincrement())
  condition    String
  General_info General_info[]
}

model Detail_source {
  id                            Int                             @id @default(autoincrement())
  source                        String
  Vehicle_details_purchase_info Vehicle_details_purchase_info[]
}

model Email_forward_incoming_leads {
  id   Int    @id @default(autoincrement())
  lead String
}

model Email_name_displayed {
  id            Int             @id @default(autoincrement())
  name          String
  Voice_and_sms Voice_and_sms[]
}

model Email_to_lead {
  id   Int    @id @default(autoincrement())
  lead String
}

model Emission_status {
  id                   Int                    @id @default(autoincrement())
  status               String
  Emission_status_data Emission_status_data[]
}

model Emission_status_data {
  id              Int             @id @default(autoincrement())
  status_id       Int
  date            DateTime
  Emission_status Emission_status @relation(fields: [status_id], references: [id], onDelete: Cascade)
  General_info    General_info[]
}

model Followup_task_visibility {
  id                Int                 @id @default(autoincrement())
  followup          String
  Customer_settings Customer_settings[]
}

model General_info {
  id                     Int                     @id @default(autoincrement())
  sales_type_id          Int?
  stock_no               String
  date_in_stock          DateTime
  ready_to_shell         DateTime
  location               String
  condition_id           Int?
  inspection_status_id   Int?
  emission_status_id     Int?
  Detail_condition       Detail_condition?       @relation(fields: [condition_id], references: [id], onDelete: Cascade)
  Emission_status_data   Emission_status_data?   @relation(fields: [emission_status_id], references: [id], onDelete: Cascade)
  Inspection_status_data Inspection_status_data? @relation(fields: [inspection_status_id], references: [id], onDelete: Cascade)
  Sales_type_category    Sales_type_category?    @relation(fields: [sales_type_id], references: [id], onDelete: Cascade)
  Vehicles               Vehicles[]
}

model Incoming_calls_options {
  id            Int             @id @default(autoincrement())
  option        String
  Voice_and_sms Voice_and_sms[]
}

model Inspection_status {
  id                     Int                      @id @default(autoincrement())
  status                 String
  Inspection_status_data Inspection_status_data[]
}

model Inspection_status_data {
  id                Int               @id @default(autoincrement())
  status_id         Int
  date              DateTime
  id_of_status      String
  inspected_by      String
  General_info      General_info[]
  Inspection_status Inspection_status @relation(fields: [status_id], references: [id], onDelete: Cascade)
}

model Payment_method {
  id                       Int                        @id @default(autoincrement())
  method                   String
  Vehicle_details_key_info Vehicle_details_key_info[]
}

model Sales_type_category {
  id           Int            @id @default(autoincrement())
  type         String
  General_info General_info[]
}

model Sms_limit_warning_recipients {
  id        Int    @id @default(autoincrement())
  recipient String
}

model Sms_template_category {
  id             Int              @id @default(autoincrement())
  category       String
  Email_template Email_template[]
  Sms_template   Sms_template[]
}

model Sms_template_variables {
  id                              Int                             @id @default(autoincrement())
  variable                        String
  category_id                     Int
  Sms_template_variables_category Sms_template_variables_category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  Sms_template_variables_tagged   Sms_template_variables_tagged[]
}

model Sms_template_variables_category {
  id                     Int                      @id @default(autoincrement())
  category               String
  Sms_template_variables Sms_template_variables[]
}

model Sms_template_variables_tagged {
  id                       Int                    @id @default(autoincrement())
  sms_template_variable_id Int
  user_id                  Int
  Sms_template_variables   Sms_template_variables @relation(fields: [sms_template_variable_id], references: [id], onDelete: Cascade)
  Users                    Users                  @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Title_brand {
  id                            Int                             @id @default(autoincrement())
  brand                         String
  Vehicle_details_title_license Vehicle_details_title_license[]
}

model Title_status {
  id                            Int                             @id @default(autoincrement())
  status                        String
  Vehicle_details_title_license Vehicle_details_title_license[]
}

model Tracking_code {
  id   Int    @id @default(autoincrement())
  code String
}

model Unknown_adf_elements {
  id      Int    @id @default(autoincrement())
  element String
}

model Vehicle_body_type {
  id   Int    @id @default(autoincrement())
  type String @unique
}

model Vehicle_details_key_info {
  id                Int             @id @default(autoincrement())
  decal_no          String?
  ignition_code     String?
  door_key_code     String?
  valet_key_code    String?
  duplicate_key     Boolean         @default(false)
  lienholder        String?
  lien_account_no   String?
  payoff_amount     String?
  due_date          DateTime?
  date_paid_off     DateTime?
  payment_method_id Int?
  per_diem          String?
  memo              String?
  Payment_method    Payment_method? @relation(fields: [payment_method_id], references: [id], onDelete: Cascade)
  Vehicles          Vehicles[]
}

model Vehicle_details_purchase_info {
  id                   Int                  @id @default(autoincrement())
  buyer                String
  acq_mill_in          String
  acq_mill_type_id     Int
  how_did_you_pay      String?
  purchase_date        DateTime
  purchase_detail      String?
  purchase_from        String?
  source_id            Int
  Detail_acq_mill_type Detail_acq_mill_type @relation(fields: [acq_mill_type_id], references: [id], onDelete: Cascade)
  Detail_source        Detail_source        @relation(fields: [source_id], references: [id], onDelete: Cascade)
  Vehicles             Vehicles[]
}

model Vehicle_details_title_license {
  id                                                                              Int              @id @default(autoincrement())
  title_owner                                                                     String?
  ros_title                                                                       String?
  title_state_id                                                                  Int?
  title_status_id                                                                 Int?
  title_brand_id                                                                  Int?
  license_no                                                                      String?
  license_state_id                                                                Int?
  license_expiration                                                              DateTime?
  additional                                                                      String?
  adversiting                                                                     String?
  asking_price                                                                    String
  bid_increment                                                                   String?
  buy_now_price                                                                   String?
  cost_adds                                                                       String?
  floor_price                                                                     String?
  min_deposit                                                                     String?
  min_down                                                                        String?
  msrp                                                                            String?
  packs                                                                           String?
  special_price                                                                   String?
  start_bid                                                                       String?
  start_bid_2                                                                     String?
  vehicle_cost                                                                    String
  whole_price                                                                     String?
  special_price_end_date                                                          DateTime?
  special_price_start_date                                                        DateTime?
  buyer_fee                                                                       String?
  lot_fee                                                                         String?
  Client_id_state_Vehicle_details_title_license_license_state_idToClient_id_state Client_id_state? @relation("Vehicle_details_title_license_license_state_idToClient_id_state", fields: [license_state_id], references: [id], onDelete: Cascade)
  Title_brand                                                                     Title_brand?     @relation(fields: [title_brand_id], references: [id], onDelete: Cascade)
  Client_id_state_Vehicle_details_title_license_title_state_idToClient_id_state   Client_id_state? @relation("Vehicle_details_title_license_title_state_idToClient_id_state", fields: [title_state_id], references: [id], onDelete: Cascade)
  Title_status                                                                    Title_status?    @relation(fields: [title_status_id], references: [id], onDelete: Cascade)
  Vehicles                                                                        Vehicles[]
}

model Vehicle_drive_train {
  id          Int        @id @default(autoincrement())
  drive_train String
  Vehicles    Vehicles[]
}

model Vehicle_engine {
  id       Int        @id @default(autoincrement())
  engine   String     @unique
  Vehicles Vehicles[]
}

model Vehicle_image {
  id       Int        @id @default(autoincrement())
  path     String
  Vehicles Vehicles[]
}

model Vehicle_make {
  id                     Int                      @id @default(autoincrement())
  brand                  String                   @unique
  Client_vehicle_tradein Client_vehicle_tradein[]
  Vehicles               Vehicles[]
}

model Vehicle_milleage_type {
  id               Int                @id @default(autoincrement())
  type             String
  Vehicle_mileages Vehicle_mileages[]
}

model Vehicle_trim {
  id       Int        @id @default(autoincrement())
  trim     String     @unique
  Vehicles Vehicles[]
}

model Voice_and_sms {
  id                                         Int                    @id @default(autoincrement())
  system_phone_for_publishing                String?
  system_email_address_for_publishing        String?
  email_verfified                            Boolean                @default(false)
  forward_incoming_calls_to                  String?
  forward_incoming_calls_option_id           Int
  dealership_phone_number                    Boolean                @default(false)
  disable_auto_emails_to_customer            Boolean                @default(false)
  disable_sending_auto_sms_over_montly_limit Boolean                @default(false)
  for_buying_vehicles_from_customers         Boolean                @default(false)
  in_spanish                                 Boolean                @default(false)
  include_dealership_address                 Boolean                @default(false)
  email_name_displayed_id                    Int
  Email_name_displayed                       Email_name_displayed   @relation(fields: [email_name_displayed_id], references: [id], onDelete: Cascade)
  Incoming_calls_options                     Incoming_calls_options @relation(fields: [forward_incoming_calls_option_id], references: [id], onDelete: Cascade)
}

model Business_primary_website_url {
  id  Int    @id @default(autoincrement())
  url String
}

model Business_vehicle_detail_page_url {
  id  Int    @id @default(autoincrement())
  url String
}

model Business_websites {
  id      Int    @id @default(autoincrement())
  website String
}

model Call_direction {
  id           Int            @id @default(autoincrement())
  direction    String
  Client_calls Client_calls[]
}

model Credit_app_address_prev {
  id                        Int                        @id @default(autoincrement())
  credit_app_address_id     Int
  prev_address              String?
  prev_street               String?
  prev_city                 String?
  prev_state                String?
  prev_state_id             String?
  prev_zip                  String?
  prev_county               String?
  prev_year                 String?
  prev_month_id             Int?
  prev_address_type_id      Int?
  prev_rent_mort            String?
  Credit_app_address        Credit_app_address         @relation(fields: [credit_app_address_id], references: [id], onDelete: Cascade)
  Credit_app_address_type   Credit_app_address_type?   @relation(fields: [prev_address_type_id], references: [id], onDelete: Cascade)
  Credit_app_address_months Credit_app_address_months? @relation(fields: [prev_month_id], references: [id], onDelete: Cascade)
}

model Credit_app_other_income {
  id            Int     @id @default(autoincrement())
  income_amount String
  income_source String
  customer_id   Int
  Clients       Clients @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

model Credit_app_reference {
  id                                Int                               @id @default(autoincrement())
  name                              String
  phone_number                      String
  relationship_id                   Int
  address                           String
  customer_id                       Int
  Clients                           Clients                           @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  Credit_app_reference_relationship Credit_app_reference_relationship @relation(fields: [relationship_id], references: [id], onDelete: Cascade)
}

model Credit_app_reference_relationship {
  id                   Int                    @id @default(autoincrement())
  relationship         String
  Credit_app_reference Credit_app_reference[]
}

model Daily_visit_history {
  id                                                   Int           @id @default(autoincrement())
  customer_id                                          Int
  sales_rep_id                                         Int
  lead_type_id                                         Int
  vehicle_id                                           Int
  trade                                                Boolean       @default(false)
  assigned_manager_id                                  Int
  location_id                                          Int?
  decision_id                                          Int
  didTheyBuyAVehicle                                   Boolean
  managerTurnover                                      Boolean
  Users_Daily_visit_history_assigned_manager_idToUsers Users         @relation("Daily_visit_history_assigned_manager_idToUsers", fields: [assigned_manager_id], references: [id], onDelete: Cascade)
  Clients                                              Clients       @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  Client_status                                        Client_status @relation(fields: [decision_id], references: [id])
  Lead_types                                           Lead_types    @relation(fields: [lead_type_id], references: [id], onDelete: Cascade)
  Users_Daily_visit_history_sales_rep_idToUsers        Users         @relation("Daily_visit_history_sales_rep_idToUsers", fields: [sales_rep_id], references: [id], onDelete: Cascade)
  Vehicles                                             Vehicles      @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
}

model Deal {
  id                  Int        @id @default(autoincrement())
  downpayment         String
  paid                String
  bonus               String
  moneyDuePaid        String
  frontend            String
  backend             String
  totalProfit         String
  deferredDownpayment String
  paymentDate         DateTime[]
  bank                String
  sellerCommission    String
  bdcCommission       String
  customer_id         Int
  Clients             Clients    @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

model Email_template {
  id                    Int                    @id @default(autoincrement())
  name                  String
  category_id           Int
  created_by            Int
  created_at            DateTime
  published             Boolean                @default(true)
  header_id             Int?
  body                  String
  footer_id             Int?
  Sms_template_category Sms_template_category  @relation(fields: [category_id], references: [id], onDelete: Cascade)
  Users                 Users                  @relation(fields: [created_by], references: [id], onDelete: Cascade)
  Footer_email_template Footer_email_template? @relation(fields: [footer_id], references: [id], onDelete: Cascade)
  Header_email_template Header_email_template? @relation(fields: [header_id], references: [id], onDelete: Cascade)
}

model Footer_email_template {
  id             Int              @id @default(autoincrement())
  footer         String
  name           String
  Email_template Email_template[]
  Letterhead     Letterhead[]
}

model Header_email_template {
  id             Int              @id @default(autoincrement())
  header         String
  name           String
  Email_template Email_template[]
  Letterhead     Letterhead[]
}

model Letterhead {
  id                    Int                    @id @default(autoincrement())
  header_id             Int?
  footer_id             Int?
  Footer_email_template Footer_email_template? @relation(fields: [footer_id], references: [id], onDelete: Cascade)
  Header_email_template Header_email_template? @relation(fields: [header_id], references: [id], onDelete: Cascade)
}

model User_schedule {
  id                                                   Int                   @id @default(autoincrement())
  dayweek_id                                           Int
  from_day_times_id                                    Int
  to_day_times_id                                      Int
  user_id                                              Int
  active                                               Boolean               @default(false)
  User_schedule_dayweek                                User_schedule_dayweek @relation(fields: [dayweek_id], references: [id], onDelete: Cascade)
  Day_times_User_schedule_from_day_times_idToDay_times Day_times             @relation("User_schedule_from_day_times_idToDay_times", fields: [from_day_times_id], references: [id], onDelete: Cascade)
  Day_times_User_schedule_to_day_times_idToDay_times   Day_times             @relation("User_schedule_to_day_times_idToDay_times", fields: [to_day_times_id], references: [id], onDelete: Cascade)
  Users                                                Users                 @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User_schedule_dayweek {
  id            Int             @id @default(autoincrement())
  day           String
  User_schedule User_schedule[]
}

model Vehicle_delivery {
  id                                        Int      @id @default(autoincrement())
  customer_id                               Int
  created_by                                Int
  assigned_to                               Int
  vehicle_id                                Int
  start_date                                DateTime
  end_date                                  DateTime
  reminder_time                             Int
  Users_Vehicle_delivery_assigned_toToUsers Users    @relation("Vehicle_delivery_assigned_toToUsers", fields: [assigned_to], references: [id], onDelete: Cascade)
  Users_Vehicle_delivery_created_byToUsers  Users    @relation("Vehicle_delivery_created_byToUsers", fields: [created_by], references: [id], onDelete: Cascade)
  Clients                                   Clients  @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  Vehicles                                  Vehicles @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)
}

model Task_Notes {
  id            Int      @id @default(autoincrement())
  note          String
  created_by_id Int
  created_at    DateTime
  task_id       Int
  Users         Users    @relation(fields: [created_by_id], references: [id], onDelete: Cascade)
  Tasks         Tasks    @relation(fields: [task_id], references: [id], onDelete: Cascade)
}

model Suspension {
  id                    Int      @id @default(autoincrement())
  mobile_phone          String
  start_suspension_date DateTime
  end_suspension_date   DateTime
}

model AppointmentSms {
  id  Int    @id @default(autoincrement())
  sms String
}

model Round_robin {
  id                                    Int        @id @default(autoincrement())
  ready_for_leads                       Boolean    @default(false)
  automatic_reassign_leads              Boolean    @default(false)
  span_time_id                          Int?
  avoid_automatic_reassign_olders_leads Boolean    @default(false)
  days_until_avoid                      Int?
  assign_leads_during_store_hours       Boolean    @default(false)
  assign_leads_during_shift_hours       Boolean    @default(false)
  users_must_activate_ready_for_leads   Boolean    @default(false)
  Time_span                             Time_span? @relation(fields: [span_time_id], references: [id])
}

model Time_span {
  id          Int           @id @default(autoincrement())
  time_span   String
  Round_robin Round_robin[]
}

model Awaiting_unknow_client {
  id                  Int     @id @default(autoincrement())
  mobile_phone_number String? @unique
  email               String? @unique
  user_id             Int?
  Users               Users?  @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Conferences_names {
  id              Int    @id @default(autoincrement())
  conference_name String @unique
}
